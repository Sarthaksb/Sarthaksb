import React from "react"; import { motion } from "framer-motion"; import { Button } from "@/components/ui/button"; import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card"; import { Badge } from "@/components/ui/badge"; import { Github, Linkedin, Mail, Phone, MapPin, Sun, ChevronDown, Award, Code, Database, Server, Wrench, Cpu } from "lucide-react";

const ACCENT = "from-purple-500 to-fuchsia-500"; const ACCENT_TEXT = "text-purple-400";

const ME = { name: "Sarthak Bankar", title: "Hi, I'm Sarthak Bankar", subtitle: "Computer Science Engineering · Data Science & Full‑Stack", summary: "Enthusiastic CSE student with a keen interest in Data Science, IoT, and full‑stack development. Skilled in Java, SQL, React, and IoT projects like Smart Irrigation.", location: "Padhegaon · Shrirampur, Maharashtra, India", email: "bankarsarthak88@gmail.com", phone: "+91-8788772035", social: { github: "https://github.com/Sarthaksb", linkedin: "https://www.linkedin.com/in/sarthak", resume: "/final.resumee.pdf", }, };

const QUICK_FACTS = [ { icon: <Code className="w-5 h-5"/>, title: "Software Developer", text: "MERN + Java solutions" }, { icon: <Wrench className="w-5 h-5"/>, title: "Problem Solver", text: "200+ DSA practice & projects" }, { icon: <Server className="w-5 h-5"/>, title: "Backend Dev", text: "Auth, REST APIs, MySQL" }, { icon: <Award className="w-5 h-5"/>, title: "Hackathon", text: "Build fast, ship faster" }, { icon: <Database className="w-5 h-5"/>, title: "Databases", text: "MySQL · MongoDB · Firebase" }, { icon: <Cpu className="w-5 h-5"/>, title: "IoT", text: "Smart Irrigation · Fritzing · ESP32" }, ];

const SKILLS = [ { title: "Frontend Development", chips: ["React + Vite", "Next.js", "Redux", "Tailwind CSS", "Figma", "ShadCN"] }, { title: "Backend Development", chips: ["Java", "Node.js", "Express.js", "REST APIs", "Redis", "WebSockets"] }, { title: "Database Management", chips: ["MySQL", "MongoDB", "Firebase", "MongoDB Atlas", "phpMyAdmin"] }, { title: "DevOps & Cloud", chips: ["AWS", "Google Cloud", "Docker", "Kubernetes", "CI/CD", "GitHub"] }, { title: "IoT & Embedded", chips: ["Arduino", "ESP32", "Sensors", "Embedded C", "IoT Protocols"] }, { title: "Product & System", chips: ["Agile", "System Architecture", "UML Designs", "Design Thinking"] }, ];

const PROJECTS = [ { date: "2025", views: 600, title: "Smart Irrigation System (IoT)", desc: "IoT based smart irrigation system to optimize water usage, integrated with sensors and NodeMCU.", tags: ["IoT", "Arduino", "NodeMCU", "Sensors"], actions: ["Contribute", "Preview"], }, { date: "2025", views: 450, title: "Hotel Management System (Java + SQL)", desc: "Desktop‑based system for hotel room booking, check‑in/out, and billing using Java and MySQL.", tags: ["Java", "SQL", "Swing", "JDBC"], actions: ["Contribute", "Preview"], }, ];

const ACHIEVEMENTS = [ { label: "Certification", title: "IBM Data Science Professional", org: "IBM", issued: "2025", topic: "Data Science", gradient: "from-purple-600 to-fuchsia-600" }, { label: "Certification", title: "NPTEL Employment Communication", org: "NPTEL", issued: "2025", topic: "Communication", gradient: "from-amber-400 to-rose-500" }, { label: "Certification", title: "DevOps Basics", org: "Great Learning", issued: "2025", topic: "DevOps", gradient: "from-violet-600 to-indigo-700" }, ];

const Shell = ({ children }) => (

  <div className="min-h-screen bg-[#0f1115] text-slate-100">
    <header className="sticky top-0 z-40 border-b border-white/5 bg-black/30 backdrop-blur">
      <div className="max-w-6xl mx-auto px-4 py-3 flex items-center justify-between">
        <a href="#home" className="font-semibold tracking-tight">sarthak<span className="text-purple-400">.dev</span></a>
        <nav className="hidden md:flex items-center gap-6 text-sm text-slate-300">
          <a className="hover:text-white" href="#home">Home</a>
          <a className="hover:text-white inline-flex items-center gap-1" href="#about">About <ChevronDown className="w-4 h-4"/></a>
          <a className="hover:text-white" href="#projects">Projects</a>
          <a className="hover:text-white" href="#achievements">Achievements</a>
          <a className="hover:text-white" href="#skills">Skills</a>
          <a className="hover:text-white" href="#contact">Contact</a>
        </nav>
        <Button variant="ghost" className="text-slate-300 hover:text-white" aria-label="theme">
          <Sun className="w-5 h-5"/>
        </Button>
      </div>
    </header><main className="max-w-6xl mx-auto px-4">{children}</main>

  </div>
);const SectionTitle = ({ children, accent }) => (

  <div className="text-center space-y-2">
    <h2 className="text-3xl md:text-4xl font-bold">
      {children} {accent && <span className={ACCENT_TEXT}> {accent}</span>}
    </h2>
  </div>
);const Chip = ({ children }) => ( <span className="px-3 py-1 rounded-lg text-xs border border-purple-500/50 bg-purple-500/10">{children}</span> );

export default function PortfolioClone() { return ( <Shell> <section id="home" className="py-10 md:py-16 grid md:grid-cols-2 gap-10"> <div className="flex flex-col justify-center"> <h1 className="text-4xl md:text-6xl font-bold leading-tight"> Hi, I'm <span className={ACCENT_TEXT}>Sarthak Bankar</span> </h1> <p className="mt-4 text-slate-300 text-base md:text-lg">{ME.subtitle}</p> <p className="mt-3 text-slate-400 text-sm md:text-base">{ME.summary}</p>

<div className="mt-6 flex flex-wrap items-center gap-3">
        <Button asChild className="bg-gradient-to-r from-purple-600 to-fuchsia-600 border-0">
          <a href={ME.social.resume} download>Download Resume</a>
        </Button>
        <Button variant="outline" asChild className="border-purple-500/40 text-slate-200">
          <a href={ME.social.github} className="inline-flex items-center gap-2"><Github className="w-4 h-4"/> GitHub</a>
        </Button>
        <Button variant="outline" asChild className="border-purple-500/40 text-slate-200">
          <a href={ME.social.linkedin} className="inline-flex items-center gap-2"><Linkedin className="w-4 h-4"/> LinkedIn</a>
        </Button>
      </div>

      <div className="mt-6 text-slate-400 text-sm flex flex-col gap-2">
        <div className="inline-flex items-center gap-2"><MapPin className="w-4 h-4"/> {ME.location}</div>
        <div className="inline-flex items-center gap-2"><Mail className="w-4 h-4"/> {ME.email}</div>
        <div className="inline-flex items-center gap-2"><Phone className="w-4 h-4"/> {ME.phone}</div>
      </div>
    </div>
    <div className="relative">
      <Card className="rounded-full overflow-hidden w-64 h-64 md:w-80 md:h-80 mx-auto shadow-[0_0_60px_-20px_rgba(168,85,247,0.7)]">
        <CardContent className="p-0 w-full h-full">
          <div className="w-full h-full bg-[url('/portrait.jpg')] bg-cover bg-center"/>
        </CardContent>
      </Card>
    </div>
  </section>

  <section id="about" className="py-10 md:py-16">
    <SectionTitle>Quick Facts</SectionTitle>
    <div className="mt-8 grid md:grid-cols-3 gap-5">
      {QUICK_FACTS.map((q, i) => (
        <Card key={i} className="bg-white/[0.02] border-white/5">
          <CardHeader className="flex flex-row items-center gap-3">
            <div className="p-2 rounded-xl bg-purple-500/20 text-purple-300">{q.icon}</div>
            <div>
              <CardTitle className="text-base">{q.title}</CardTitle>
              <CardDescription className="text-slate-400">{q.text}</CardDescription>
            </div>
          </CardHeader>
        </Card>
      ))}
    </div>
  </section>

  <section id="skills" className="py-10 md:py-16">
    <SectionTitle>Skills &</SectionTitle>
    <div className="text-center -mt-6"><span className={"font-bold "+ACCENT_TEXT}> Expertise</span></div>
    <div className="mt-8 grid md:grid-cols-2 gap-6">
      {SKILLS.map((s, i) => (
        <Card key={i} className="bg-white/[0.02] border-white/5">
          <CardHeader><CardTitle className="text-lg">{s.title}</CardTitle></CardHeader>
          <CardContent className="flex flex-wrap gap-2">
            {s.chips.map((c, idx) => (<Chip key={idx}>{c}</Chip>))}
          </CardContent>
        </Card>
      ))}
    </div>
  </section>

  <section id="projects" className="py-10 md:py-16">
    <SectionTitle>My</SectionTitle>
    <div className="text-center -mt-6"><span className={"font-bold "+ACCENT_TEXT}> Projects</span></div>
    <div className="mt-8 grid md:grid-cols-2 gap-6">
      {PROJECTS.map((p, i) => (
        <Card key={i} className="bg-white/[0.02] border-white/5">
          <CardHeader>
            <div className="flex items-center justify-between text-xs text-slate-400"><span>{p.date}</span><span>{p.views} views</span></div>
            <CardTitle className="text-lg">{p.title}</CardTitle>
            <CardDescription className="text-slate-400">{p.desc}</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="flex flex-wrap gap-2">{p.tags.map((t, idx) => (<Chip key={idx}>{t}</Chip>))}</div>
            <div className="mt-4 flex gap-3">
              {p.actions.map((a, idx) => (<Button key={idx} variant="outline" className="border-purple-500/40">{a}</Button>))}
            </div>
          </CardContent>
        </Card>
      ))}
    </div>
  </section>

  <section id="achievements" className="py-10 md:py-16">
    <SectionTitle>Achievements &</SectionTitle>
    <div className="text-center -mt-6"><span className={"font-bold "+ACCENT_TEXT}> Honors</span></div>
    <div className="mt-8 grid md:grid-cols-2 gap-6">
      {ACHIEVEMENTS.map((a, i) => (
        <Card key={i} className="overflow-hidden border-0">
          <div className={`p-6 bg-gradient-to-br ${a.gradient} rounded-xl`}>
            <div className="text-xs bg-black/20 inline-flex px-2 py-1 rounded-md mb-3">{a.label}</div>
            <div className="text-xl font-semibold">{a.title}</div>
            <div className="text-sm opacity-90">{a.org}</div>
            <div className="mt-3 text-xs opacity-90">Issued: {a.issued} {a.expires ? `· Expires: ${a.expires}` : null}</div>
            {a.topic && (<div className="mt-3 inline-flex"><Chip>{a.topic}</Chip></div>)}
          </div>
        </Card>
      ))}
    </div>
  </section>

  <section id="contact" className="py-12">
    <Card className="bg-white/[0.03] border-white/5">
      <CardContent className="p-6 md:p-8 grid md:grid-cols-2 gap-6 items-center">
        <div>
          <h3 className="text-2xl font-bold">Let's Work Together</h3>
          <p className="text-slate-400 mt-2">Open for internships, freelance projects, and collaborations.</p>
        </div>
        <div className="flex md:justify-end gap-3">
          <Button asChild className="bg-gradient-to-r from-purple-600 to-fuchsia-600 border-0">
            <a href={`mailto:${ME.email}`}>Get in Touch</a>
          </Button>
          <Button variant="outline" asChild className="border-purple-500/40 text-slate-200">
            <a href={ME.social.linkedin}><Linkedin className="w-4 h-4 mr-2"/> LinkedIn</a>
          </Button>
        </div>
      </CardContent>
    </Card>
    <footer className="py-10 text-center text-xs text-slate-500">© {new Date().getFullYear()} {ME.name}. All rights reserved.</footer>
  </section>
</Shell>

); }

